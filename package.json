{
  "name": "tabler-ui",
  "version": "1.0.0",
  "description": "Premium and Open Source dashboard template with responsive and high quality UI.",
  "scripts": {
    "start": "npm-run-all clean css-main js-compile-standalone --parallel browsersync watch html-watch",
    "build": "npm-run-all html-build css js",
    "build-windows": "npm-run-all html-build-windows css-windows js",
    "bundlesize": "bundlesize",
    "browsersync": "node build/browsersync.js",
    "html-watch": "bundle exec jekyll build --watch",
    "html-build-windows": "set JEKYLL_ENV=production; bundle exec jekyll build",
    "html-build": "JEKYLL_ENV=production bundle exec jekyll build",
    "lint": "npm-run-all --parallel js-lint css-lint",
    "clean": "rm -rf dist && mkdir dist && mkdir dist/css && mkdir dist/js",
    "clean-windows": "rd /s/q \"dist\" & md \"dist\" & md \"dist/css\" & md \"dist/js\"",
    "css": "npm-run-all css-compile css-prefix css-minify",
    "css-windows": "npm-run-all css-compile css-prefix-windows css-minify-windows",
    "css-compile": "node build/scss-compile.js",
    "css-prefix": "postcss --config \"build/postcss.config.js\" --replace \"dist/css/*.css\" \"!dist/css/*.min.css\"",
    "css-prefix-windows": "postcss  \"dist/css/*.css\" --config \"build/postcss.config.js\" --replace",
    "css-minify": "for i in dist/css/tabler*.css;do echo $i; N=`echo $i | sed -e 's/^dist\\/css\\///g' | sed -e 's/\\\\.css//g'`; echo $N; cleancss --level 1 --format breakWith=lf --source-map --source-map-inline-sources --output dist/css/$N.min.css dist/css/$N.css; done",
    "css-minify-windows": "echo \"Note: auto minify for css doesnt work. Fix it if u can.\"",
    "css-lint": "stylelint \"scss/**/*.scss\" --cache --cache-location .cache/.stylelintcache",
    "css-main": "npm-run-all css-compile css-prefix",
    "css-main-build": "npm-run-all css-lint css-compile css-prefix css-minify",
    "watch": "npm-run-all --parallel watch-*",
    "watch-css": "nodemon --watch scss/ --ext scss --exec \"npm run css-main\"",
    "watch-js": "nodemon --watch js/ --ext js --exec \"npm run js-compile-standalone\"",
    "js": "npm-run-all js-compile js-minify",
    "js-lint": "eslint --cache --cache-location .cache/.eslintcache js build/",
    "js-compile": "npm-run-all --parallel js-compile-* --sequential js-minify",
    "js-compile-standalone": "rollup --environment BUNDLE:false --config build/rollup.config.js --sourcemap",
    "js-compile-bundle": "rollup --environment BUNDLE:true --config build/rollup.config.js --sourcemap",
    "js-minify": "npm-run-all js-minify-standalone* js-minify-bundle",
    "js-minify-standalone": "terser --compress typeofs=false --mangle --comments \"/^!/\" --source-map \"content=dist/js/tabler.js.map,includeSources,url=tabler.min.js.map\" --output dist/js/tabler.min.js dist/js/tabler.js",
    "js-minify-bundle": "terser --compress typeofs=false --mangle --comments \"/^!/\" --source-map \"content=dist/js/tabler.bundle.js.map,includeSources,url=tabler.bundle.min.js.map\" --output dist/js/tabler.bundle.min.js dist/js/tabler.bundle.js",
    "svg-svgo": "svgo -f svg/fe --pretty && svgo -f svg/brand --pretty",
    "svg-iconfont": "mkdir -p svg-tmp && for i in svg/*/*.svg;do N=`echo $i | sed -e 's/^svg\\///g' | sed -e 's/\\\\.svg$//g' | sed -e 's/\\//-/g'`; echo $i; rsvg-convert $i -o svg-tmp/$N.svg -f svg -w 1000; done && svgo ./svg-tmp/*.svg --disable={removeViewBox} && icon-font-generator ./svg-tmp/*.svg -o fonts/tabler-webfont --html false --csstp build/tabler-webfont.hbs --csspath scss/fonts/_tabler-webfont.scss --center --normalize --name tabler-webfont --types svg,eot,ttf,woff,woff2 --json false && rm -rf svg-tmp && node build/generate-font-codepoints.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tabler/tabler.git"
  },
  "keywords": [],
  "author": "codecalm",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/tabler/tabler/issues"
  },
  "engines": {
    "node": ">=8"
  },
  "files": [
    "dist/{css,js}/*.{css,js,map}",
    "js/{src,dist}/**/*.{js,map}",
    "scss/**/*.scss"
  ],
  "homepage": "https://tabler.io",
  "devDependencies": {
    "browser-sync": "2.26.7",
    "bundlesize": "0.17.2",
    "clean-css-cli": "4.3.0",
    "cross-env": "5.2.0",
    "eslint": "5.16.0",
    "eslint-config-xo": "0.26.0",
    "eslint-plugin-import": "2.17.3",
    "eslint-plugin-unicorn": "9.1.0",
    "http-server": "0.11.1",
    "icon-font-generator": "2.1.10",
    "node-sass": "4.12.0",
    "nodemon": "1.19.1",
    "npm-run-all": "4.1.5",
    "popper.js": "1.15.0",
    "postcss-cli": "6.1.2",
    "rollup": "1.15.6",
    "rollup-plugin-babel": "4.3.2",
    "rollup-plugin-node-resolve": "5.0.3",
    "shx": "0.3.2",
    "stylelint": "10.1.0",
    "stylelint-config-twbs-bootstrap": "0.3.1",
    "svgo": "1.2.2",
    "terser": "4.0.0",
    "yaml": "1.6.0"
  },
  "dependencies": {
    "apexcharts": "3.8.0",
    "autosize": "4.0.2",
    "bootstrap": "twbs/bootstrap#08bddb8",
    "imask": "5.1.5",
    "selectize": "0.12.6"
  },
  "bundlesize": [
    {
      "path": "./dist/css/tabler.css",
      "maxSize": "50 kB"
    },
    {
      "path": "./dist/css/tabler.min.css",
      "maxSize": "45 kB"
    },
    {
      "path": "./dist/js/tabler.js",
      "maxSize": "2 kB"
    },
    {
      "path": "./dist/js/tabler.min.js",
      "maxSize": "1.5 kB"
    },
    {
      "path": "./dist/js/tabler.bundle.js",
      "maxSize": "1.5 kB"
    },
    {
      "path": "./dist/js/tabler.bundle.min.js",
      "maxSize": "1.1 kB"
    }
  ]
}
